<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:tx="http://www.springframework.org/schema/tx" xmlns:aop="http://www.springframework.org/schema/aop"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
        http://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/context
        http://www.springframework.org/schema/context/spring-context.xsd
        http://www.springframework.org/schema/tx
        http://www.springframework.org/schema/tx/spring-tx.xsd
        http://www.springframework.org/schema/aop
        http://www.springframework.org/schema/aop/spring-aop.xsd
        ">

	<!-- scan package -->
	<context:component-scan base-package="com.itany.bbs.daoImpl" />
	<context:component-scan base-package="com.itany.bbs.serviceImpl" />
	<context:component-scan base-package="com.itany.bbs.rowmapper" />

	<!-- read datasource file -->
	<bean
		class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
		<property name="location" value="classpath:datasource.properties"></property>
	</bean>

	<!-- 准备数据源 -->
	<bean id="dataSource"
		class="org.springframework.jdbc.datasource.DriverManagerDataSource">
		<property name="driverClassName" value="${jdbc.driverName}"></property>
		<property name="url" value="${jdbc.url}"></property>
		<property name="username" value="${jdbc.username}"></property>
		<property name="password" value="${jdbc.password}"></property>
	</bean>

	<bean id="template" class="org.springframework.jdbc.core.JdbcTemplate">
		<constructor-arg ref="dataSource"></constructor-arg>
	</bean>


	<!-- 开启事务的第一步 ：创建 数据源事务的管理器 -->
	<bean id="transactionManager"
		class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<constructor-arg value="#{dataSource}"></constructor-arg>
	</bean>

	<!-- 第二步: 准备 通知（advice）告诉我们事务由谁来处理 -->
	<tx:advice id="txadvice" transaction-manager="transactionManager">
		<tx:attributes>
			<!-- 哪些方法需要被切割并且执行 事务 name : 要进行事务包裹的 方法名，支持表达式 read-only: 表示事务是只读的， 也就是说 
				获取的数据是不能修改底层的 -->
			<tx:method name="*All" read-only="false" />
		</tx:attributes>
	</tx:advice>

	<!-- 第三步：开启 AOP 来完成 切点的设置 以及 advisor 的织入工作 -->
	<!-- AOP -->
	<aop:config>
		<aop:pointcut expression="execution(* com.itany.serviceImpl.*.*(..))"
			id="pcut" />
		<aop:advisor advice-ref="txadvice" pointcut-ref="pcut" />
	</aop:config>

</beans>
